// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.25.0
// 	protoc        v3.14.0
// source: remotepb/service.proto

package remotepb

import (
	base "github.com/ecnuvj/vhoj_rpc/model/base"
	proto "github.com/golang/protobuf/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// This is a compile-time assertion that a sufficiently up-to-date version
// of the legacy proto package is being used.
const _ = proto.ProtoPackageIsVersion4

type QueryCrawlResultRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawId uint64 `protobuf:"varint,1,opt,name=raw_id,json=rawId,proto3" json:"raw_id,omitempty"`
}

func (x *QueryCrawlResultRequest) Reset() {
	*x = QueryCrawlResultRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCrawlResultRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCrawlResultRequest) ProtoMessage() {}

func (x *QueryCrawlResultRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCrawlResultRequest.ProtoReflect.Descriptor instead.
func (*QueryCrawlResultRequest) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{0}
}

func (x *QueryCrawlResultRequest) GetRawId() uint64 {
	if x != nil {
		return x.RawId
	}
	return 0
}

type QueryCrawlResultResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Status       int32              `protobuf:"varint,1,opt,name=status,proto3" json:"status,omitempty"`
	BaseResponse *base.BaseResponse `protobuf:"bytes,2,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
}

func (x *QueryCrawlResultResponse) Reset() {
	*x = QueryCrawlResultResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[1]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *QueryCrawlResultResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*QueryCrawlResultResponse) ProtoMessage() {}

func (x *QueryCrawlResultResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[1]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use QueryCrawlResultResponse.ProtoReflect.Descriptor instead.
func (*QueryCrawlResultResponse) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{1}
}

func (x *QueryCrawlResultResponse) GetStatus() int32 {
	if x != nil {
		return x.Status
	}
	return 0
}

func (x *QueryCrawlResultResponse) GetBaseResponse() *base.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

type SubmitCodeRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	UserId          uint64 `protobuf:"varint,1,opt,name=user_id,json=userId,proto3" json:"user_id,omitempty"`
	Username        string `protobuf:"bytes,2,opt,name=username,proto3" json:"username,omitempty"`
	RemoteOj        int32  `protobuf:"varint,3,opt,name=remote_oj,json=remoteOj,proto3" json:"remote_oj,omitempty"`
	RemoteProblemId string `protobuf:"bytes,4,opt,name=remote_problem_id,json=remoteProblemId,proto3" json:"remote_problem_id,omitempty"`
	Language        int32  `protobuf:"varint,5,opt,name=language,proto3" json:"language,omitempty"`
	SourceCode      string `protobuf:"bytes,6,opt,name=source_code,json=sourceCode,proto3" json:"source_code,omitempty"`
	ContestId       uint64 `protobuf:"varint,7,opt,name=contest_id,json=contestId,proto3" json:"contest_id,omitempty"`
	ProblemId       uint64 `protobuf:"varint,8,opt,name=problem_id,json=problemId,proto3" json:"problem_id,omitempty"`
}

func (x *SubmitCodeRequest) Reset() {
	*x = SubmitCodeRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[2]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeRequest) ProtoMessage() {}

func (x *SubmitCodeRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[2]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeRequest.ProtoReflect.Descriptor instead.
func (*SubmitCodeRequest) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{2}
}

func (x *SubmitCodeRequest) GetUserId() uint64 {
	if x != nil {
		return x.UserId
	}
	return 0
}

func (x *SubmitCodeRequest) GetUsername() string {
	if x != nil {
		return x.Username
	}
	return ""
}

func (x *SubmitCodeRequest) GetRemoteOj() int32 {
	if x != nil {
		return x.RemoteOj
	}
	return 0
}

func (x *SubmitCodeRequest) GetRemoteProblemId() string {
	if x != nil {
		return x.RemoteProblemId
	}
	return ""
}

func (x *SubmitCodeRequest) GetLanguage() int32 {
	if x != nil {
		return x.Language
	}
	return 0
}

func (x *SubmitCodeRequest) GetSourceCode() string {
	if x != nil {
		return x.SourceCode
	}
	return ""
}

func (x *SubmitCodeRequest) GetContestId() uint64 {
	if x != nil {
		return x.ContestId
	}
	return 0
}

func (x *SubmitCodeRequest) GetProblemId() uint64 {
	if x != nil {
		return x.ProblemId
	}
	return 0
}

type SubmitCodeResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	SubmissionId uint64             `protobuf:"varint,1,opt,name=submission_id,json=submissionId,proto3" json:"submission_id,omitempty"`
	BaseResponse *base.BaseResponse `protobuf:"bytes,2,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
}

func (x *SubmitCodeResponse) Reset() {
	*x = SubmitCodeResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[3]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *SubmitCodeResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*SubmitCodeResponse) ProtoMessage() {}

func (x *SubmitCodeResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[3]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use SubmitCodeResponse.ProtoReflect.Descriptor instead.
func (*SubmitCodeResponse) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{3}
}

func (x *SubmitCodeResponse) GetSubmissionId() uint64 {
	if x != nil {
		return x.SubmissionId
	}
	return 0
}

func (x *SubmitCodeResponse) GetBaseResponse() *base.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

type CrawlProblemRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RemoteOj        int32  `protobuf:"varint,1,opt,name=remote_oj,json=remoteOj,proto3" json:"remote_oj,omitempty"`
	RemoteProblemId string `protobuf:"bytes,2,opt,name=remote_problem_id,json=remoteProblemId,proto3" json:"remote_problem_id,omitempty"`
	Enforce         bool   `protobuf:"varint,3,opt,name=enforce,proto3" json:"enforce,omitempty"`
}

func (x *CrawlProblemRequest) Reset() {
	*x = CrawlProblemRequest{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[4]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawlProblemRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlProblemRequest) ProtoMessage() {}

func (x *CrawlProblemRequest) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[4]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlProblemRequest.ProtoReflect.Descriptor instead.
func (*CrawlProblemRequest) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{4}
}

func (x *CrawlProblemRequest) GetRemoteOj() int32 {
	if x != nil {
		return x.RemoteOj
	}
	return 0
}

func (x *CrawlProblemRequest) GetRemoteProblemId() string {
	if x != nil {
		return x.RemoteProblemId
	}
	return ""
}

func (x *CrawlProblemRequest) GetEnforce() bool {
	if x != nil {
		return x.Enforce
	}
	return false
}

type CrawlProblemResponse struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	RawProblemId uint64             `protobuf:"varint,1,opt,name=raw_problem_id,json=rawProblemId,proto3" json:"raw_problem_id,omitempty"`
	BaseResponse *base.BaseResponse `protobuf:"bytes,2,opt,name=base_response,json=baseResponse,proto3" json:"base_response,omitempty"`
}

func (x *CrawlProblemResponse) Reset() {
	*x = CrawlProblemResponse{}
	if protoimpl.UnsafeEnabled {
		mi := &file_remotepb_service_proto_msgTypes[5]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *CrawlProblemResponse) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*CrawlProblemResponse) ProtoMessage() {}

func (x *CrawlProblemResponse) ProtoReflect() protoreflect.Message {
	mi := &file_remotepb_service_proto_msgTypes[5]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use CrawlProblemResponse.ProtoReflect.Descriptor instead.
func (*CrawlProblemResponse) Descriptor() ([]byte, []int) {
	return file_remotepb_service_proto_rawDescGZIP(), []int{5}
}

func (x *CrawlProblemResponse) GetRawProblemId() uint64 {
	if x != nil {
		return x.RawProblemId
	}
	return 0
}

func (x *CrawlProblemResponse) GetBaseResponse() *base.BaseResponse {
	if x != nil {
		return x.BaseResponse
	}
	return nil
}

var File_remotepb_service_proto protoreflect.FileDescriptor

var file_remotepb_service_proto_rawDesc = []byte{
	0x0a, 0x16, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x0f, 0x62, 0x61, 0x73, 0x65, 0x2f, 0x62,
	0x61, 0x73, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x30, 0x0a, 0x17, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x12, 0x15, 0x0a, 0x06, 0x72, 0x61, 0x77, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x05, 0x72, 0x61, 0x77, 0x49, 0x64, 0x22, 0x6b, 0x0a, 0x18, 0x51,
	0x75, 0x65, 0x72, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52,
	0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75,
	0x73, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x73, 0x74, 0x61, 0x74, 0x75, 0x73, 0x12,
	0x37, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x65, 0x2e, 0x42, 0x61,
	0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62, 0x61, 0x73, 0x65,
	0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x8c, 0x02, 0x0a, 0x11, 0x53, 0x75, 0x62,
	0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x17,
	0x0a, 0x07, 0x75, 0x73, 0x65, 0x72, 0x5f, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x04, 0x52,
	0x06, 0x75, 0x73, 0x65, 0x72, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x75, 0x73, 0x65, 0x72, 0x6e,
	0x61, 0x6d, 0x65, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x6a,
	0x18, 0x03, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x6a,
	0x12, 0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c,
	0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d,
	0x6f, 0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08,
	0x6c, 0x61, 0x6e, 0x67, 0x75, 0x61, 0x67, 0x65, 0x12, 0x1f, 0x0a, 0x0b, 0x73, 0x6f, 0x75, 0x72,
	0x63, 0x65, 0x5f, 0x63, 0x6f, 0x64, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0a, 0x73,
	0x6f, 0x75, 0x72, 0x63, 0x65, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x1d, 0x0a, 0x0a, 0x63, 0x6f, 0x6e,
	0x74, 0x65, 0x73, 0x74, 0x5f, 0x69, 0x64, 0x18, 0x07, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x63,
	0x6f, 0x6e, 0x74, 0x65, 0x73, 0x74, 0x49, 0x64, 0x12, 0x1d, 0x0a, 0x0a, 0x70, 0x72, 0x6f, 0x62,
	0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x04, 0x52, 0x09, 0x70, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x22, 0x72, 0x0a, 0x12, 0x53, 0x75, 0x62, 0x6d, 0x69,
	0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x23, 0x0a,
	0x0d, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x5f, 0x69, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x73, 0x75, 0x62, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70, 0x6f,
	0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x73, 0x65,
	0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c, 0x62,
	0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x78, 0x0a, 0x13, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65,
	0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x6f, 0x6a, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x4f, 0x6a, 0x12,
	0x2a, 0x0a, 0x11, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x5f, 0x69, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0f, 0x72, 0x65, 0x6d, 0x6f,
	0x74, 0x65, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x49, 0x64, 0x12, 0x18, 0x0a, 0x07, 0x65,
	0x6e, 0x66, 0x6f, 0x72, 0x63, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e,
	0x66, 0x6f, 0x72, 0x63, 0x65, 0x22, 0x75, 0x0a, 0x14, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x50, 0x72,
	0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x12, 0x24, 0x0a,
	0x0e, 0x72, 0x61, 0x77, 0x5f, 0x70, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x5f, 0x69, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x04, 0x52, 0x0c, 0x72, 0x61, 0x77, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65,
	0x6d, 0x49, 0x64, 0x12, 0x37, 0x0a, 0x0d, 0x62, 0x61, 0x73, 0x65, 0x5f, 0x72, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x62, 0x61, 0x73,
	0x65, 0x2e, 0x42, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x52, 0x0c,
	0x62, 0x61, 0x73, 0x65, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x32, 0xd2, 0x01, 0x0a,
	0x0d, 0x52, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x53, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x12, 0x37,
	0x0a, 0x0a, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x12, 0x12, 0x2e, 0x53,
	0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74,
	0x1a, 0x13, 0x2e, 0x53, 0x75, 0x62, 0x6d, 0x69, 0x74, 0x43, 0x6f, 0x64, 0x65, 0x52, 0x65, 0x73,
	0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x3d, 0x0a, 0x0c, 0x43, 0x72, 0x61, 0x77, 0x6c,
	0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x12, 0x14, 0x2e, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x50,
	0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x15, 0x2e,
	0x43, 0x72, 0x61, 0x77, 0x6c, 0x50, 0x72, 0x6f, 0x62, 0x6c, 0x65, 0x6d, 0x52, 0x65, 0x73, 0x70,
	0x6f, 0x6e, 0x73, 0x65, 0x22, 0x00, 0x12, 0x49, 0x0a, 0x10, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43,
	0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x12, 0x18, 0x2e, 0x51, 0x75, 0x65,
	0x72, 0x79, 0x43, 0x72, 0x61, 0x77, 0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x71,
	0x75, 0x65, 0x73, 0x74, 0x1a, 0x19, 0x2e, 0x51, 0x75, 0x65, 0x72, 0x79, 0x43, 0x72, 0x61, 0x77,
	0x6c, 0x52, 0x65, 0x73, 0x75, 0x6c, 0x74, 0x52, 0x65, 0x73, 0x70, 0x6f, 0x6e, 0x73, 0x65, 0x22,
	0x00, 0x42, 0x4c, 0x0a, 0x1d, 0x63, 0x6f, 0x6d, 0x2e, 0x76, 0x6a, 0x75, 0x64, 0x67, 0x65, 0x2e,
	0x65, 0x63, 0x6e, 0x75, 0x76, 0x6a, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x73, 0x65, 0x72, 0x76, 0x69,
	0x63, 0x65, 0x50, 0x01, 0x5a, 0x29, 0x67, 0x69, 0x74, 0x68, 0x75, 0x62, 0x2e, 0x63, 0x6f, 0x6d,
	0x2f, 0x65, 0x63, 0x6e, 0x75, 0x76, 0x6a, 0x2f, 0x76, 0x68, 0x6f, 0x6a, 0x5f, 0x72, 0x70, 0x63,
	0x2f, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x2f, 0x72, 0x65, 0x6d, 0x6f, 0x74, 0x65, 0x70, 0x62, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_remotepb_service_proto_rawDescOnce sync.Once
	file_remotepb_service_proto_rawDescData = file_remotepb_service_proto_rawDesc
)

func file_remotepb_service_proto_rawDescGZIP() []byte {
	file_remotepb_service_proto_rawDescOnce.Do(func() {
		file_remotepb_service_proto_rawDescData = protoimpl.X.CompressGZIP(file_remotepb_service_proto_rawDescData)
	})
	return file_remotepb_service_proto_rawDescData
}

var file_remotepb_service_proto_msgTypes = make([]protoimpl.MessageInfo, 6)
var file_remotepb_service_proto_goTypes = []interface{}{
	(*QueryCrawlResultRequest)(nil),  // 0: QueryCrawlResultRequest
	(*QueryCrawlResultResponse)(nil), // 1: QueryCrawlResultResponse
	(*SubmitCodeRequest)(nil),        // 2: SubmitCodeRequest
	(*SubmitCodeResponse)(nil),       // 3: SubmitCodeResponse
	(*CrawlProblemRequest)(nil),      // 4: CrawlProblemRequest
	(*CrawlProblemResponse)(nil),     // 5: CrawlProblemResponse
	(*base.BaseResponse)(nil),        // 6: base.BaseResponse
}
var file_remotepb_service_proto_depIdxs = []int32{
	6, // 0: QueryCrawlResultResponse.base_response:type_name -> base.BaseResponse
	6, // 1: SubmitCodeResponse.base_response:type_name -> base.BaseResponse
	6, // 2: CrawlProblemResponse.base_response:type_name -> base.BaseResponse
	2, // 3: RemoteService.SubmitCode:input_type -> SubmitCodeRequest
	4, // 4: RemoteService.CrawlProblem:input_type -> CrawlProblemRequest
	0, // 5: RemoteService.QueryCrawlResult:input_type -> QueryCrawlResultRequest
	3, // 6: RemoteService.SubmitCode:output_type -> SubmitCodeResponse
	5, // 7: RemoteService.CrawlProblem:output_type -> CrawlProblemResponse
	1, // 8: RemoteService.QueryCrawlResult:output_type -> QueryCrawlResultResponse
	6, // [6:9] is the sub-list for method output_type
	3, // [3:6] is the sub-list for method input_type
	3, // [3:3] is the sub-list for extension type_name
	3, // [3:3] is the sub-list for extension extendee
	0, // [0:3] is the sub-list for field type_name
}

func init() { file_remotepb_service_proto_init() }
func file_remotepb_service_proto_init() {
	if File_remotepb_service_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_remotepb_service_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCrawlResultRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotepb_service_proto_msgTypes[1].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*QueryCrawlResultResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotepb_service_proto_msgTypes[2].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCodeRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotepb_service_proto_msgTypes[3].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*SubmitCodeResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotepb_service_proto_msgTypes[4].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawlProblemRequest); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
		file_remotepb_service_proto_msgTypes[5].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*CrawlProblemResponse); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_remotepb_service_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   6,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_remotepb_service_proto_goTypes,
		DependencyIndexes: file_remotepb_service_proto_depIdxs,
		MessageInfos:      file_remotepb_service_proto_msgTypes,
	}.Build()
	File_remotepb_service_proto = out.File
	file_remotepb_service_proto_rawDesc = nil
	file_remotepb_service_proto_goTypes = nil
	file_remotepb_service_proto_depIdxs = nil
}
